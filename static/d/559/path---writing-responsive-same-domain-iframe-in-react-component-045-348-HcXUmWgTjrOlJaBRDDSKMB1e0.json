{"data":{"markdownRemark":{"html":"<h2>Why you may want it</h2>\n<p>Recently, we needed to embed a number of personal finance calculators in\nour customer-facing portal. Instead of building very elaborate models for the\ncalculators and spending a lot of time on implementing each one of them from\nscratch, we wanted to see which calculators users would find most interesting.\nIteration speed and testing users' interactions with many calculators and\nunderlying models was more important than building a perfect calculator or\nhaving the outputs persisted in the backend.</p>\n<p>Based on these requirements, we decided to look for tools that would help the\nbuisness team create calculators easily and quickly and keep developers focused\non more pressing development tasks. We found a website that converts\nspreadsheets with formulas into responsive and dynamic forms that can also display\nresults. Lastly, the site also allows us to download the forms as html files. And\nall of it for free (<em>which is always good for a startup</em>)!</p>\n<p>Instead of just rendering these files individually, we wanted to make them\nfeel like they were native to our app and surround them with the proper\ncontext and branding. They couldn't just look like iframes clumsily thrown onto\nthe page. That\nmeant no double scrolling in this case (where you have a scrollbar on the browser\nwindow and another one on a particular iframe or div in the DOM).\nThat's not so easy when the forms themselves would get longer or shorter in the\niframe based on the user toggling a switch or changing an answer. Also, different\ncalculators have different lengths in their iframes. Thus, no hardcoding allowed\nbecause we wanted to reuse the pages and components wrapping those calculators.</p>\n<p>You may use the following techniques if</p>\n<ol>\n<li>You're using React (though similar things may work for other frontend frameworks)</li>\n<li>You don't need to render server-side</li>\n<li>You have an html file, a relative path to your own domain, or a url\nto a domain with cross-origin checking turned off.</li>\n</ol>\n<p>One last word of caution. Be careful which html files or urls you include,\notherwise you may expose your users to XSS.</p>\n<p>Ok, so far so motivated...</p>\n<h2>How you do it</h2>\n<p>If you want to dive right into the code and see the working example without much\nfurther ado, then click <a href=\"https://codepen.io/simongawlik/pen/zyJbMm\">here</a>.</p>\n<iframe style=\"width:100%;\" height=\"300\" src=\"https://codepen.io/simongawlik/full/zyJbMm\" frameborder=\"1\" allowfullscreen></iframe>\n<p>If you've read past this point, then I'll provide some context to the code now.</p>\n<p>The difficulty is that React's virtual DOM needs to work with the actual\nDOM. Some elements like the <code class=\"language-text\">iframe</code>'s content may load after the virtual\nDOM has already mounted the components. Or a user may drag the side of the browser and that\ncould change the height of the <code class=\"language-text\">iframe</code>'s content. What we need is for the\ncomponent to be told what the height of the iframe's content wants to be and\nwhen that changes. The component could then pass down that height to the\ncomponents that wrap the <code class=\"language-text\">iframe</code>.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">App</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> iframeHeight<span class=\"token punctuation\">:</span> undefined <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token operator\">...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>You can see that my <code class=\"language-text\">App</code> component has only one variable in its state,\n<code class=\"language-text\">iframeHeight</code>. We use will use it to set the height of the elements that contain\nthe <code class=\"language-text\">iframe</code>.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">  <span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">checkIfIframeLoaded</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function-variable function\">checkIfIframeLoaded</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> iframe <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'responsive-iframe'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> iframeDoc <span class=\"token operator\">=</span> iframe<span class=\"token punctuation\">.</span>contentDocument <span class=\"token operator\">||</span>\n      iframe<span class=\"token punctuation\">.</span>contentWindow<span class=\"token punctuation\">.</span>document<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>iframeDoc<span class=\"token punctuation\">.</span>readyState <span class=\"token operator\">===</span> <span class=\"token string\">'complete'</span> <span class=\"token operator\">&amp;&amp;</span>\n        iframeDoc<span class=\"token punctuation\">.</span><span class=\"token function\">getElementsByTagName</span><span class=\"token punctuation\">(</span><span class=\"token string\">'body'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">onElementHeightChange</span><span class=\"token punctuation\">(</span>iframe<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>updateIframeHeight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    window<span class=\"token punctuation\">.</span><span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>checkIfIframeLoaded<span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>\n<p>As soon as the component is done mounting, we check if our particular iframe\nexists in the DOM yet. We use the DOM API to see if we can find an <code class=\"language-text\">iframe</code> with\na particular <code class=\"language-text\">id</code>, in this case <code class=\"language-text\">&#39;responsive-iframe&#39;</code>, and whether the\ndocument inside of it is done loading and\ncontains a <code class=\"language-text\">body</code> tag. If it does, we can get the height of the body and update\n<code class=\"language-text\">iframeHeight</code>. If not, we wait for 0.1 seconds and try again.</p>\n<p>When <code class=\"language-text\">iframeHeight</code> changes, we re-render the component.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\">  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> iframeHeight <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>container<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n          Let's embed this iframe below like\n          it's part of our site! No double-scrolling\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span>\n          <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>iframe-container<span class=\"token punctuation\">\"</span></span>\n          <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>\n            <span class=\"token operator\">...</span><span class=\"token punctuation\">(</span>iframeHeight\n              <span class=\"token operator\">?</span> <span class=\"token punctuation\">{</span> height<span class=\"token punctuation\">:</span> iframeHeight <span class=\"token punctuation\">}</span>\n              <span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n        <span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>iframe</span>\n            <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>responsive-iframe<span class=\"token punctuation\">\"</span></span>\n            <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>\n              <span class=\"token operator\">...</span><span class=\"token punctuation\">(</span>iframeHeight\n                <span class=\"token operator\">?</span> <span class=\"token punctuation\">{</span> height<span class=\"token punctuation\">:</span> iframeHeight <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n              <span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n            <span class=\"token attr-name\">srcdoc</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>iframeContent<span class=\"token punctuation\">}</span></span>\n          <span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>iframe</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n          Let's embed this iframe above like\n          it's part of our site! No double-scrolling\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>\n<p>I'm conditionally applying styles depending on whether we have a height to\nwork with or not. Note that inline styles like this give us a small performance hit.</p>\n<p>Okay, if you were reading closely, you noticed that I glossed over\n<code class=\"language-text\">onElementHeightChange</code> and <code class=\"language-text\">updateIframeHeight</code>. What's happening in those?</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">  <span class=\"token function-variable function\">onElementHeightChange</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>el<span class=\"token punctuation\">,</span> callback<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> lastHeight <span class=\"token operator\">=</span> el\n      <span class=\"token punctuation\">.</span>contentWindow\n      <span class=\"token punctuation\">.</span>document\n      <span class=\"token punctuation\">.</span><span class=\"token function\">getElementsByTagName</span><span class=\"token punctuation\">(</span><span class=\"token string\">'body'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n      <span class=\"token punctuation\">.</span>scrollHeight<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> newHeight<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">let</span> bodies <span class=\"token operator\">=</span> el\n        <span class=\"token punctuation\">.</span>contentWindow\n        <span class=\"token punctuation\">.</span>document\n        <span class=\"token punctuation\">.</span><span class=\"token function\">getElementsByTagName</span><span class=\"token punctuation\">(</span><span class=\"token string\">'body'</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>bodies<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        newHeight <span class=\"token operator\">=</span> bodies<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>scrollHeight<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>lastHeight <span class=\"token operator\">!==</span> newHeight<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n\n      lastHeight <span class=\"token operator\">=</span> newHeight<span class=\"token punctuation\">;</span>\n      el<span class=\"token punctuation\">.</span>onElementHeightChangeTimer <span class=\"token operator\">=</span> <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span>run<span class=\"token punctuation\">,</span> <span class=\"token number\">750</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>\n<p>We compare the current height of the iframe, <code class=\"language-text\">lastHeight</code>, with its <code class=\"language-text\">newHeight</code>.\nWhat's with the <code class=\"language-text\">run</code> function in parentheses, you ask? It's a recursive function that we\ncall right away (<a href=\"https://developer.mozilla.org/en-US/docs/Glossary/IIFE\">IIFE</a>).\nBasically, we call the <code class=\"language-text\">run</code> function, it gets the new height of the <code class=\"language-text\">iframe</code>\nand if that height is different from the previous one, we call the callback\nfunction, which in our case is <code class=\"language-text\">updateIframeHeight</code> and we'll discuss it right\nafter this one. On the last line, we do a setTimeout  which will call the <code class=\"language-text\">run</code>\nfunction again after a certain amount of milliseconds have passed. In practice,\nthis means that we created a loop that checks every so many milliseconds whether\nthe height of the iframe has changed, and if so, tells the component via\n<code class=\"language-text\">updateIframeHeight</code>.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">  <span class=\"token function-variable function\">updateIframeHeight</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>newHeight<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> iframeHeight<span class=\"token punctuation\">:</span> newHeight <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>\n<p>Nothing crazy happening here, just updating the height in the component state...\nand we're done!</p>\n<h2>Conclusion</h2>\n<p>We found a way to continuously have the body inside of an <code class=\"language-text\">iframe</code> report its\nheight to a React component that contains the <code class=\"language-text\">iframe</code>. This enabled us to use the\nset the height of the containers around the <code class=\"language-text\">iframe</code> and make it appear as if it\nwas just a normal <code class=\"language-text\">div</code> that flows and resizes with the rest of the page.</p>\n<p>If you have suggestions for better ways to include responsive <code class=\"language-text\">iframes</code>, I'd love\nto hear about them. Feel free to contact me!</p>\n<h2>Tidbits</h2>\n<p>Using the <code class=\"language-text\">srcdoc</code> attribute on an <code class=\"language-text\">iframe</code> is a fun way to render a full html\nstring converted to actual markup in a document. This is useful\nif you're trying to display the html-version of an email or a scraped website\nthat you've saved to a text field in your database.</p>\n<p>When you access the html or body inside of an iframe with the DOM API you may\nnotice that the <code class=\"language-text\">scrollHeight</code> of the <code class=\"language-text\">body</code> and that of the <code class=\"language-text\">html</code> element are not the same.\nThis happens when tags such as <code class=\"language-text\">body</code> or <code class=\"language-text\">p</code> don't have their margins reset.\nThat's why you can see me adding <code class=\"language-text\">style=&quot;margin:0;&quot;</code> to most of the elements in\n<code class=\"language-text\">iframeContent</code>.</p>\n<p>Some people think that you need to <code class=\"language-text\">clearTimeout</code> after <code class=\"language-text\">setTimeout</code>. However,\nthat's only the case if you want to stop it before it runs.</p>","frontmatter":{"title":"Responsive Same-Domain Iframe in React Component"}}},"pageContext":{"slug":"/writing/responsive-same-domain-iframe-in-react-component/"}}
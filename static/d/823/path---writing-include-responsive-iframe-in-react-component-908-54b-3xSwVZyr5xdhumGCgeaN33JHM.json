{"data":{"markdownRemark":{"html":"<h2>Why you many want it</h2>\n<p>Recently, we needed to embed a number of personal finance calculators in\nour customer-facing portal. Instead of building very elaborate models for the\ncalculators and spending a lot of time on implementing each one of them from\nscratch, we wanted to see which calculators users would find most interesting.\nIteration speed and testing users' interactions with many calculators and\nunderlying models was more important than building a perfect calculator or\nhaving the outputs persisted in the backend.</p>\n<p>Based on these requirements, we decided to look for tools that would help the\nbuisness team create calculators easily and quickly and keep developers focused\non more pressing development tasks. We found a website that converts\nspreadsheets with formulas into responsive and dynamic forms that can also display\nresults. Lastly, the site also allows us to download the forms as html files. And\nall of it for free (<em>which is always good for a startup</em>)!</p>\n<p>Instead of just rendering these files individually, we wanted to make them\nfeel like they were native to our app and surround them with the proper\ncontext and branding. They couldn't just look like iframes clumsily thrown onto\nthe page. That\nmeant no double scrolling in this case (where you have a scrollbar on the browser\nwindow and another one on a particular iframe or div in the DOM).\nThat's not so easy when the forms themselves would get longer or shorter in the\niframe based on the user toggling a switch or changing an answer. Also, different\ncalculators have different lengths in their iframes. Thus, no hardcoding allowed\nbecause we wanted to reuse the pages and components wrapping those calculators.</p>\n<p>You may use the following techniques if</p>\n<ol>\n<li>You're using React (though similar things may work for other frontend frameworks)</li>\n<li>You don't need to render server-side</li>\n<li>You have an html file, a relative path to your own domain, or a url\nto a domain with cross-origin checking turned off.</li>\n</ol>\n<p>One last word of caution. Be careful which html files or urls you include,\notherwise you may expose your users to XSS.</p>\n<p>Ok, so far so motivated...</p>\n<h2>How you do it</h2>\n<p>If you want to dive right in without much further ado, see the working example\n<a href=\"https://codepen.io/simongawlik/pen/zyJbMm\">here</a>.</p>\n<iframe style=\"width:100%;\" height=\"300\" src=\"https://codepen.io/simongawlik/full/zyJbMm\" frameborder=\"0\" allowfullscreen></iframe>\n<p>If you've read past this point, then I'll provide some context to the code now.</p>\n<p>The difficulty is that React's virtual DOM needs to work with the actual\nDOM. Some elements like the <code class=\"language-text\">iframe</code>'s content may be loaded after the virtual\nDOM has already mounted the components. Or a user may drag the side of the browser and that\ncould change the height of the <code class=\"language-text\">iframe</code>'s content. What we need is for the\ncomponent to be told what the height of the iframe's content wants to be and\nwhen that changes. The component could then pass down that height to the\ncomponents that wrap the <code class=\"language-text\">iframe</code>.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">App</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> iFrameHeight<span class=\"token punctuation\">:</span> undefined <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token operator\">...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>You can see that my <code class=\"language-text\">App</code> component has only one variable in its state,\n<code class=\"language-text\">iFrameHeight</code>. We use will use it to set the height of the elements that contain\nthe <code class=\"language-text\">iframe</code>.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">  <span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">checkIfIFrameLoaded</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function-variable function\">checkIfIFrameLoaded</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> iFrame <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'responsive-iframe'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> iFrameDoc <span class=\"token operator\">=</span> iFrame<span class=\"token punctuation\">.</span>contentDocument <span class=\"token operator\">||</span>\n      iFrame<span class=\"token punctuation\">.</span>contentWindow<span class=\"token punctuation\">.</span>document<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>iFrameDoc<span class=\"token punctuation\">.</span>readyState <span class=\"token operator\">===</span> <span class=\"token string\">'complete'</span> <span class=\"token operator\">&amp;&amp;</span>\n        iFrameDoc<span class=\"token punctuation\">.</span><span class=\"token function\">getElementsByTagName</span><span class=\"token punctuation\">(</span><span class=\"token string\">'body'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">onElementHeightChange</span><span class=\"token punctuation\">(</span>iFrame<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>updateIFrameHeight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    window<span class=\"token punctuation\">.</span><span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>checkIfIFrameLoaded<span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>\n<p>As soon as the component is done mounting we check if our particular iframe\nexists in the DOM yet. We use the DOM API to see if we can find an <code class=\"language-text\">iframe</code> with\na particular <code class=\"language-text\">id</code>, in this case <code class=\"language-text\">&#39;responsive-iframe&#39;</code>, and whether the\ndocument inside of it is done loading and\ncontains an <code class=\"language-text\">body</code> tag. If it does, we can get the height of the body and update\n<code class=\"language-text\">iFrameHeight</code>. If not, we wait for 0.1 seconds and try again.</p>\n<p>When <code class=\"language-text\">iFrameHeight</code> changes, we re-render the component.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token operator\">&lt;</span>div className<span class=\"token operator\">=</span><span class=\"token string\">\"container\"</span> <span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n          Let<span class=\"token string\">'s embed this iframe like it'</span>s part <span class=\"token keyword\">of</span> our site<span class=\"token operator\">!</span> No double<span class=\"token operator\">-</span>scrolling\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>div\n          className<span class=\"token operator\">=</span><span class=\"token string\">\"iframe-container\"</span>\n          style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>\n            <span class=\"token operator\">...</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>iFrameHeight\n              <span class=\"token operator\">?</span> <span class=\"token punctuation\">{</span> height<span class=\"token punctuation\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>iFrameHeight <span class=\"token punctuation\">}</span>\n              <span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> height<span class=\"token punctuation\">:</span> <span class=\"token string\">'100%'</span> <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n        <span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span>iframe\n            id<span class=\"token operator\">=</span><span class=\"token string\">\"responsive-iframe\"</span>\n            style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>\n              <span class=\"token operator\">...</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>iFrameHeight\n                <span class=\"token operator\">?</span> <span class=\"token punctuation\">{</span> height<span class=\"token punctuation\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>iFrameHeight <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> height<span class=\"token punctuation\">:</span> <span class=\"token string\">'100%'</span> <span class=\"token punctuation\">}</span>\n              <span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n            srcdoc<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>iFrameContent<span class=\"token punctuation\">}</span>\n          <span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>iframe<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n          Let<span class=\"token string\">'s embed this iframe like it'</span>s part <span class=\"token keyword\">of</span> our site<span class=\"token operator\">!</span> No double<span class=\"token operator\">-</span>scrolling\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>\n<p>I'm conditionally applying styles depending on whether we\nhave a height to work with or not.</p>\n<p>Okay, I glossed over <code class=\"language-text\">onElementHeightChange</code> and <code class=\"language-text\">updateIFrameHeight</code>.</p>\n<p><a href=\"https://codepen.io/simongawlik/pen/zyJbMm\">See the codepen</a></p>","frontmatter":{"title":"Responsive Same-Domain iframe in React Component"}}},"pageContext":{"slug":"/writing/include-responsive-iframe-in-react-component/"}}
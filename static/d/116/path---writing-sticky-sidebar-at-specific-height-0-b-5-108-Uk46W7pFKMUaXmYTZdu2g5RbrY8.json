{"data":{"markdownRemark":{"html":"<h2>Why you may want it</h2>\n<p>Sometimes things on the screen are only supposed to move so much and then stay\nwhere they are. In a task I was working on a few months ago, we decided to\ndo that for a score in the left sidebar of our results page that follows a long\nquiz. We wanted to draw users' focus to the score and keep it at the\ncenter of attention even while users were free to explore the rest of the page.</p>\n<p>When the user scrolls down the score scrolls with the rest of the page\nuntil it reaches the bottom of our fixed header. It then stays there while the\nmain content continues to scroll as the user scrolls. It also detaches\nitself from the fixed header when the user scrolls back up.</p>\n<p>Too many words... observe:</p>\n<iframe style=\"width:100%;\" height=\"300\" src=\"https://codepen.io/simongawlik/full/VqGmKQ\" frameborder=\"1\" allowfullscreen></iframe>\n<h2>How you do it</h2>\n<p>As always, you can jump right into the working example with code\n<a href=\"https://codepen.io/simongawlik/pen/VqGmKQ\">here</a> but we'll walk through it\ntogether below.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">App</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> fixedHeight<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token operator\">...</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>header<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">header</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>shim<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>container<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span>\n            <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>sticky-at-height<span class=\"token punctuation\">\"</span></span>\n            <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>\n              <span class=\"token operator\">...</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>fixedHeight\n                <span class=\"token operator\">?</span> <span class=\"token punctuation\">{</span>\n                    position<span class=\"token punctuation\">:</span> <span class=\"token string\">\"fixed\"</span><span class=\"token punctuation\">,</span>\n                    top<span class=\"token punctuation\">:</span> <span class=\"token constant\">HEADER_HEIGHT</span><span class=\"token punctuation\">,</span>\n                  <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n           <span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n            some menu items that get sticky when they reach the header\n          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span>\n            <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>side-shim<span class=\"token punctuation\">\"</span></span>\n            <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>\n              <span class=\"token operator\">...</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>fixedHeight\n                <span class=\"token operator\">?</span> <span class=\"token punctuation\">{</span> width<span class=\"token punctuation\">:</span> <span class=\"token constant\">SIDE_MENU_WIDTH</span> <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n          <span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n\n          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>reference<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>lots-o-text<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n              imagine a whole bunch of text.\n            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>We're tracking whether the <code class=\"language-text\">div</code> containing the sidebar, <code class=\"language-text\">.sticky-at-height</code>\nshould be fixed under the header in <code class=\"language-text\">App</code>'s component state. This allows\nus to conditionally apply styles to the elements that will make it look seamless.</p>\n<p>Let's walk through the structure of the elements real quick. The header comes\nfirst and we fix it to the top of the screen.</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.header</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 40px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> red<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">overflow</span><span class=\"token punctuation\">:</span> hidden<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> fixed<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">top</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Since we used <code class=\"language-text\">position: fixed;</code> We now add a shim of the same dimensions into the DOM.</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.shim</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 40px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>This way we don't have to worry about the top of the container being hidden\nbehind the header.</p>\n<p>Now we have three <code class=\"language-text\">div</code>s inside of our container, <code class=\"language-text\">.sticky-at-height</code>,\n<code class=\"language-text\">#reference</code>, and <code class=\"language-text\">.side-shim</code>. <code class=\"language-text\">.side-shim</code> only gets a width style applied to\nit when <code class=\"language-text\">fixedHeight</code> is true. Similarly, <code class=\"language-text\">#reference</code> only has its position\nfixed when <code class=\"language-text\">fixedHeight</code> is true. We need to include <code class=\"language-text\">.side-shim</code> because fixing\n<code class=\"language-text\">.sticky-at-height</code> removes it from the regular flow of inline elements and\nsomething needs to take its place. There are many other ways to do this without\nresorting to shims, like floating elements differently, using tables, or flexbox.</p>\n<p>With that out of the way, let's turn to how we track the position of a DOM\nelement to set a variable in state. The EventTarget Web API provides us with\n<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\"><code class=\"language-text\">addEventListener</code></a>\nand <code class=\"language-text\">removeEventListener</code> which let's us tell the browser to (1) get back to us if\na specific event occurs and (2) what to do then.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">  <span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    window<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'scroll'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleScroll<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">componentWillUnmount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    window<span class=\"token punctuation\">.</span><span class=\"token function\">removeEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'scroll'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleScroll<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>\n<p>Any event listener that was added should also be removed (<a href=\"https://stackoverflow.com/questions/6033821/do-i-need-to-remove-event-listeners-before-removing-elements/37096563#37096563\">why?</a>).\nIn React we need to do this on <code class=\"language-text\">componentWillUnmount</code>.\nThe event listener waits for the user to scroll and whenever that happens, to calls\n<code class=\"language-text\">handleScroll</code>.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">  <span class=\"token function-variable function\">handleScroll</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> stickyAtHeight <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'reference'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> top <span class=\"token operator\">=</span> <span class=\"token constant\">HEADER_HEIGHT</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// sometimes element hasn't loaded yet</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>stickyAtHeight<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> rect <span class=\"token operator\">=</span> stickyAtHeight<span class=\"token punctuation\">.</span><span class=\"token function\">getBoundingClientRect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      top <span class=\"token operator\">=</span> rect<span class=\"token punctuation\">.</span>top<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>top <span class=\"token operator\">&lt;</span> <span class=\"token constant\">HEADER_HEIGHT</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>fixedHeight<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> fixedHeight<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>top <span class=\"token operator\">>=</span> <span class=\"token constant\">HEADER_HEIGHT</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>fixedHeight<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> fixedHeight<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>\n<p>This function tries to get the y-coordinate of the top of the <code class=\"language-text\">div</code> with the id\n<code class=\"language-text\">reference</code>. Okay, this is clearly a lof of code for something that sounds so\nsimple... what's up with that? First, we have to make sure that the element\neven exists and some users might start scrolling before the page has loaded the\nelement. If or when it exists, we try to get its coordinates and in particular\nthe y-coordinate of the top.</p>\n<p>Now remember that the coordinate system in the browser has 0 in the upper\nlefthand corner and y-coordinates increase as you go down the screen. In our\ncase this means that when the reference div loads, its y-value is positive\nand we want to know when it scrolls past a currently less positive y-value (our\nfixed header).</p>\n<p>That's what the last <code class=\"language-text\">if</code>-statement inside <code class=\"language-text\">handleScroll</code> checks. Once <code class=\"language-text\">top</code> is less\nthan <code class=\"language-text\">HEADER_HEIGHT</code>, we know that the <code class=\"language-text\">.sticky-at-height</code> div should stop\nscrolling. And if the div is currently sticking to the header and the user scrolls\nback up, we want to make sure to unstick it, which is what the <code class=\"language-text\">else if</code>-statement\nchecks.</p>\n<p>If you've been super-attentive and you haven't just been trying to copy down this\ncode to get it working in your non-toy production code for a deadline that's approaching you\nwith the business-like indifference of a comet which forced dinosaurs into evolving\ninto birds, then you might have a question for me now.</p>\n<p>\"Simon, you're tracking the height of the <code class=\"language-text\">div#reference</code> to set the\nheight of the <code class=\"language-text\">div.sticky-at-height</code>! (╯°□°)╯︵ ┻━┻. Why would you not just\ntrack it on the element itself instead of needing the extra complication?\"</p>\n<p>This is left as an exercise for the reader... No, seriously, the reason for it\nis that if you track the height of <code class=\"language-text\">div.sticky-at-height</code> directly, you'll\nfind it flickering and not doing what you'd expect. It flickers between being\nstuck to the bottom of header and scrolling past it. The height that the browser\nperceived alternates quickly between fixed and relative positioning. Instead\nwe use the other div as a reference point since that div will always be positioned\nrelatively.</p>\n<h2>Conclusion</h2>\n<p>In this post we walked through how to create a <code class=\"language-text\">div</code> that only moves within a certain visual\nrange in the browser using React and the EventTarget Web API. Similar approaches\nwould work in plain JS or using other frameworks. If you find any errors</p>\n<h2>Tidbits</h2>\n<p>You'll want to change some of my magic numbers to match your styles. You'll also\nbe able to use CSS preprocessors to leverage CSS variables.</p>\n<p>Conditional styling in JS is a little performance hit.</p>\n<p>I'd love to play with <a href=\"https://developer.mozilla.org/en-US/docs/Web/Guide/Events/Creating_and_triggering_events\">custom events</a> in the future and see what neat things could be\ndone with it.</p>","frontmatter":{"title":"Sticky Sidebar at Specific Height"}}},"pageContext":{"slug":"/writing/sticky-sidebar-at-specific-height/"}}